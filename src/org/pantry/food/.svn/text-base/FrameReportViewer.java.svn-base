/*
  Copyright 2011 Dave Johnson

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/
package org.pantry.food;

import java.awt.print.PrinterException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JButton;
import javax.swing.JEditorPane;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JToolBar;

import org.pantry.food.reports.IReportBase;

/**
 *
 * @author Dave Johnson
 */
public class FrameReportViewer extends javax.swing.JInternalFrame {
	
    private JButton btnPrint;
    private JButton btnSave;
    private JEditorPane editorPane;
    private JScrollPane jScrollPane1;
    private JToolBar jToolBar1;

    /**
	 * 
	 */
	private static final long serialVersionUID = -2746967929135530088L;

	/** Creates new form FrameReportViewer */
    public FrameReportViewer() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        jToolBar1 = new JToolBar();
        btnPrint = new JButton();
        btnSave = new JButton();
        jScrollPane1 = new JScrollPane();
        editorPane = new JEditorPane();

        setClosable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(org.pantry.food.FoodPantryApp.class).getContext().getResourceMap(FrameReportViewer.class);
        setTitle(resourceMap.getString("Form.title")); 
        setFrameIcon(resourceMap.getIcon("Form.frameIcon")); 
        setName("Form"); 
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); 

        btnPrint.setIcon(resourceMap.getIcon("btnPrint.icon")); 
        btnPrint.setText("Print"); 
        btnPrint.setFocusable(false);
        btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPrint.setName("btnPrint"); 
        btnPrint.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        jToolBar1.add(btnPrint);

        btnSave.setIcon(resourceMap.getIcon("btnSave.icon")); 
        btnSave.setText(resourceMap.getString("btnSave.text")); 
        btnSave.setFocusable(false);
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setName("btnSave"); 
        btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSave);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);

        jScrollPane1.setName("jScrollPane1"); 

        editorPane.setEditable(false);
        editorPane.setName("editorPane"); 
        jScrollPane1.setViewportView(editorPane);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {
        print();
    }

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
        FormState.getInstance().setFormOpen(false);
    }

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {
        save();
    }


    private IReportBase reportBase;

    public void setDisplayFromFile(String path){
        
    }
    
    public void setDisplayFromStringBuffer(StringBuffer buffer){

        editorPane.setContentType("text/html");
        editorPane.setText(buffer.toString());
    }

    public void setDisplayFromIReport(IReportBase report) {

        reportBase = report;
        editorPane.setContentType("text/html");
        editorPane.setText(report.getBuffer().toString());


    }

    private void print(){
        try {
            this.editorPane.print();
        } catch (PrinterException ex) {
            Logger.getLogger(FrameReportViewer.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void save() {
        try {

            String path = reportBase.saveReport();
            JOptionPane.showMessageDialog(this, "Report saved at:" + path );

        } catch (IOException ex) {
            Logger.getLogger(FrameReportViewer.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


}
