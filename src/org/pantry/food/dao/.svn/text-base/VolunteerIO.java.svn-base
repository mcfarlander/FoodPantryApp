/*
  Copyright 2011 Dave Johnson

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/
package org.pantry.food.io;

import au.com.bytecode.opencsv.CSVReader;
import au.com.bytecode.opencsv.CSVWriter;
import java.io.File;
import java.io.FileNotFoundException;

import java.io.FileReader;
import java.io.IOException;
import java.io.FileWriter;
import java.util.ArrayList;

import org.pantry.food.FormState;

/**
 *
 * @author mcfarland_davej
 */
public class VolunteerIO {

    private String startDir = "";

    private ArrayList<Volunteer> cvsList = new ArrayList<Volunteer>();

    public ArrayList<Volunteer> getCvsList(){return this.cvsList;}
    public int getCvsCount(){return this.cvsList.size();}

    public void setStartDir(String sDir){this.startDir = sDir;}

    private static final int VOLUNTEERID    = 0;
    private static final int NAME           = 1;
    private static final int PHONE     		= 2;
    private static final int EMAIL          = 3;
    private static final int TYPE           = 4;
    private static final int NOTE           = 5;

    private static final String Col_VolunteerId     = "volunteerid";
    private static final String Col_Name            = "name";
    private static final String Col_Phone	        = "phone";
    private static final String Col_Email           = "email";
    private static final String Col_Type            = "type";
    private static final String Col_Note            = "note";

    /**
     * Reads in the CSV file into a list.
     * @throws FileNotFoundException
     * @throws IOException
     */
    public void readCsvFile() throws FileNotFoundException, IOException{

        System.out.println("VolunteerIO.readCsvFile");
        if (startDir.length() == 0){
            startDir = new java.io.File(".").getCanonicalPath();
        }

        System.out.println("Cvs Path:" + startDir + "/" + FormState.getInstance().getCsvFileVolunteers());
        File file = new File(startDir + "/" + FormState.getInstance().getCsvFileVolunteers());
        cvsList = new ArrayList<Volunteer>();

        if (file.exists()){

            System.out.println("Volunteer cvs file found");
            //read in the whole file into a list
            FileReader fr = new FileReader(file);
            CSVReader reader = new CSVReader(fr);

            String [] nextLine;
            boolean firstLine = true;
            while ((nextLine = reader.readNext()) != null) {
               // nextLine[] is an array of values from the line
               // System.out.println(nextLine.length + " etc...");

                if (!firstLine){
                    Volunteer record = new Volunteer();
                    record.setVolunteerId(Integer.parseInt(nextLine[VOLUNTEERID]));
                    record.setName(nextLine[NAME]);
                    record.setPhone(nextLine[PHONE]);
                    record.setEmail(nextLine[EMAIL]);
                    record.setType(nextLine[TYPE]);
                    record.setNote(nextLine[NOTE]);

                    cvsList.add(record);

                } else {
                    firstLine = !firstLine;
                }

            }


        } else {
            System.out.println("Volunteer cvs file NOT found");
        }


    }// end of readCsvFile

    /*
     * Writes all memory items back into a CSV file.
     */
    public void saveCsvFile() throws IOException{

        System.out.println("VolunterIO.saveCsvFile");
        if (startDir.length() == 0){
            startDir = new java.io.File(".").getCanonicalPath();
        }

        System.out.println("Cvs Path:" + startDir + "/" + FormState.getInstance().getCsvFileVolunteers());
        File file = new File(startDir + "/" + FormState.getInstance().getCsvFileVolunteers());

        if (file.exists()){
            System.out.println("deleting old file");
            file.delete();
        }

        System.out.println("creating and saving to csv file");
        FileWriter fw = new FileWriter(file);
        CSVWriter writer = new CSVWriter(fw);

        // add the column titles
        String[] titles = {Col_VolunteerId, Col_Name,
            Col_Phone, Col_Email,
            Col_Type, Col_Note
            };

        writer.writeNext(titles);

        for (int i = 0; i < cvsList.size(); i++){
            Volunteer record = cvsList.get(i);
            writer.writeNext(record.getCvsEntry());

        }

        writer.close();


    }

    /*
     * Adds an object to the list (in memory).
     */
    public void addVolunteer(Volunteer vol){
        cvsList.add(vol);
    }

    /*
     *
     */
    public void editVolunteer(Volunteer vol){

        for (int i = 0; i < cvsList.size(); i++){

            Volunteer testRecord = cvsList.get(i);

            if (testRecord.getVolunteerId() == vol.getVolunteerId()){

                testRecord.setName(vol.getName());
                testRecord.setPhone(vol.getPhone());
                testRecord.setEmail(vol.getEmail());
                testRecord.setType(vol.getType());
                testRecord.setNote(vol.getNote());

                break;
            }
        }


    }// end of edit

    public void deleteVolunteer(Volunteer vol){

        for (int i = 0; i < cvsList.size(); i++){

            Volunteer testRecord = cvsList.get(i);
            if (testRecord.getVolunteerId() == vol.getVolunteerId()){
                cvsList.remove(i);
                break;
            }
        }

    }// end of delete



}
